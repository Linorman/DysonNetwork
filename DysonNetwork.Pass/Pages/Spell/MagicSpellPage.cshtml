@page "/spells/{spellWord}"
@using DysonNetwork.Pass.Account
@model DysonNetwork.Pass.Pages.Spell.MagicSpellPage

@{
    ViewData["Title"] = "Magic Spell";
}

<div class="hero min-h-full bg-base-200">
    <div class="hero-content text-center">
        <div class="max-w-md">
            <h1 class="text-5xl font-bold mb-4">Magic Spell</h1>

            @if (Model.IsSuccess)
            {
                <div class="alert alert-success">
                    <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>
                    <span>The spell was applied successfully!</span>
                    <p>Now you can close this page.</p>
                </div>
            }
            else if (Model.CurrentSpell == null)
            {
                <div class="alert alert-warning">
                    <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" /></svg>
                    <span>The spell was expired or does not exist.</span>
                </div>
            }
            else
            {
                <div class="card bg-base-100 shadow-xl">
                    <div class="card-body">
                        <h2 class="card-title">
                            @System.Text.RegularExpressions.Regex.Replace(Model.CurrentSpell!.Type.ToString(), "([a-z])([A-Z])", "$1 $2")
                        </h2>
                        <p>for @@ @Model.CurrentSpell.Account?.Name</p>
                        <div class="text-sm opacity-80">
                            @if (Model.CurrentSpell.ExpiresAt.HasValue)
                            {
                                <p>Available until @Model.CurrentSpell.ExpiresAt.Value.ToDateTimeUtc().ToString("g")</p>
                            }
                            @if (Model.CurrentSpell.AffectedAt.HasValue)
                            {
                                <p>Available after @Model.CurrentSpell.AffectedAt.Value.ToDateTimeUtc().ToString("g")</p>
                            }
                        </div>
                        <p class="text-sm opacity-80">Would you like to apply this spell?</p>
                        
                        <form method="post" class="mt-4">
                            <input type="hidden" asp-for="CurrentSpell!.Id"/>

                            @if (Model.CurrentSpell?.Type == MagicSpellType.AuthPasswordReset)
                            {
                                <div class="form-control w-full max-w-xs">
                                    <label class="label" asp-for="NewPassword">
                                        <span class="label-text">New Password</span>
                                    </label>
                                    <input type="password"
                                           asp-for="NewPassword"
                                           required
                                           minlength="8"
                                           placeholder="Your new password"
                                           class="input input-bordered w-full max-w-xs"/>
                                </div>
                            }

                            <div class="card-actions justify-end mt-4">
                                <button type="submit" class="btn btn-primary">Apply</button>
                            </div>
                        </form>
                    </div>
                </div>
            }
            
            <div class="mt-8 text-center text-sm">
                <div class="font-semibold mb-1">Solar Network</div>
                <div class="text-base-content/70">
                    <a href="https://solsynth.dev" class="link link-hover">
                        Solsynth LLC
                    </a>
                    &copy; @DateTime.Now.Year
                    <br/>
                    Powered by
                    <a href="https://github.com/Solsynth/DysonNetwork" class="link link-hover">
                        DysonNetwork.Pass
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>
